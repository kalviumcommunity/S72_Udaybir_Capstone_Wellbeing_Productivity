var e=Object.defineProperty,t=(t,r,o)=>((t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o)(t,"symbol"!=typeof r?r+"":r,o);const r=new class{constructor(){t(this,"TOKEN_KEY","authToken"),t(this,"USER_KEY","userData"),t(this,"REFRESH_THRESHOLD",3e5)}setToken(e){try{const t={token:e.token,expiresAt:e.expiresAt,user:e.user};sessionStorage.setItem(this.USER_KEY,JSON.stringify(t.user)),sessionStorage.setItem("tokenExpiresAt",t.expiresAt.toString()),document.cookie=`${this.TOKEN_KEY}=${t.token}; path=/; secure; samesite=strict; max-age=604800`}catch(t){console.error("Failed to store token:",t)}}getToken(){try{const e=document.cookie.split(";").find(e=>e.trim().startsWith(`${this.TOKEN_KEY}=`));return e?e.split("=")[1]:null}catch(e){return console.error("Failed to get token:",e),null}}getUser(){try{const e=sessionStorage.getItem(this.USER_KEY);return e?JSON.parse(e):null}catch(e){return console.error("Failed to get user data:",e),null}}isTokenValid(){try{if(!this.getToken())return!1;const e=sessionStorage.getItem("tokenExpiresAt");if(!e)return!1;const t=parseInt(e);return Date.now()<t}catch(e){return console.error("Failed to check token validity:",e),!1}}needsRefresh(){try{const e=sessionStorage.getItem("tokenExpiresAt");if(!e)return!0;const t=parseInt(e),r=Date.now();return t-r<=this.REFRESH_THRESHOLD}catch(e){return console.error("Failed to check token refresh need:",e),!0}}clearToken(){try{document.cookie=`${this.TOKEN_KEY}=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`,sessionStorage.removeItem(this.USER_KEY),sessionStorage.removeItem("tokenExpiresAt")}catch(e){console.error("Failed to clear token:",e)}}decodeToken(e){try{const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),r=decodeURIComponent(atob(t).split("").map(e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)).join(""));return JSON.parse(r)}catch(t){return console.error("Failed to decode token:",t),null}}getTokenExpiry(){try{const e=sessionStorage.getItem("tokenExpiresAt");return e?parseInt(e):null}catch(e){return console.error("Failed to get token expiry:",e),null}}getTimeUntilExpiry(){try{const e=this.getTokenExpiry();if(!e)return 0;const t=Date.now();return Math.max(0,e-t)}catch(e){return console.error("Failed to get time until expiry:",e),0}}};export{r as tokenManager};
